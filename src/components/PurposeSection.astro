---
import { getTranslations } from '../i18n';
import '../styles/global.css';

const locale = Astro.currentLocale || 'es';
const t = getTranslations(locale);

// Carousel images
const carouselImages = [
  {
    src: "/src/assets/purpose-carousel-1.webp",
    alt: `${t.purposeSection.imageAlt} #1`
  },
  {
    src: "/src/assets/purpose-carousel-2.webp", 
    alt: `${t.purposeSection.imageAlt} #2`
  },
  {
    src: "/src/assets/purpose-carousel-3.webp",
    alt: `${t.purposeSection.imageAlt} #3`
  },
  {
    src: "/src/assets/purpose-carousel-4.webp",
    alt: `${t.purposeSection.imageAlt} #4`
  },
  {
    src: "/src/assets/purpose-carousel-5.webp",
    alt: `${t.purposeSection.imageAlt} #5`
  }
];
---

<section class="purpose-section relative overflow-hidden min-h-screen flex items-center justify-center">
  <!-- Pink Wave Background -->
  <div 
    class="absolute inset-0 w-full h-full bg-cover bg-center bg-no-repeat"
    style="background-image: url('/src/assets/program-pink-wave.svg')"
  ></div>
  
  <!-- Main Content Container -->
  <div class="relative z-10 w-full max-w-7xl mx-auto px-6 lg:px-12 py-16">
    <div class="grid lg:grid-cols-2 gap-12 lg:gap-16 items-center">
      
      <!-- Carousel Section -->
      <div class="order-1 flex justify-center lg:justify-start">
        <div class="relative">
          <!-- Main Carousel Container -->
          <div 
            id="purpose-carousel" 
            class="relative w-80 h-80 md:w-96 md:h-96 lg:w-[450px] lg:h-[450px] rounded-lg overflow-hidden"
          >
            <!-- Image Slides -->
            {carouselImages.map((image, index) => (
              <div 
                class={`carousel-slide absolute inset-0 transition-opacity duration-500 ease-in-out ${
                  index === 0 ? 'opacity-100' : 'opacity-0'
                }`}
                data-slide-index={index}
              >
                <img 
                  src={image.src}
                  alt={image.alt}
                  class="w-full h-full object-cover"
                  loading="lazy"
                />
              </div>
            ))}
          </div>
        </div>
      </div>

      <!-- Text Content -->
      <div class="text-center lg:text-left space-y-8 order-2 relative">
        <!-- Title with Background Line -->
        <div class="relative">
          <!-- Background Line Behind Title -->
          <div class="absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 h-10 md:h-16 lg:h-20 bg-green-jm -z-10" style="width: 100vw;"></div>
          
          <!-- Title -->
          <h2 class="text-2xl md:text-4xl lg:text-5xl font-bold text-white leading-tight relative z-10 title-shadow">
            {t.purposeSection.title}
          </h2>
        </div>
        
        <!-- Description -->
        <div class="space-y-6">
          <p class="text-base md:text-lg lg:text-xl text-white/90 leading-relaxed font-light max-w-2xl mx-auto lg:mx-0 text-shadow">
            {t.purposeSection.description}
          </p>
        </div>
      </div>
      
    </div>
  </div>
</section>

<script>
  class PurposeCarousel {
    private carousel: HTMLElement | null;
    private slides: NodeListOf<Element>;
    private currentSlide: number = 0;
    private totalSlides: number;
    private intervalId: number | null = null;

    constructor() {
      this.carousel = document.getElementById('purpose-carousel');
      this.slides = document.querySelectorAll('.carousel-slide');
      this.totalSlides = this.slides.length;
      
      if (this.carousel && this.slides.length > 0) {
        this.init();
      }
    }

    init() {
      // Start auto-rotation
      this.startAutoRotation();
    }

    showSlide(index: number) {
      // Update slides
      this.slides.forEach((slide, i) => {
        const slideElement = slide as HTMLElement;
        if (i === index) {
          slideElement.classList.remove('opacity-0');
          slideElement.classList.add('opacity-100');
        } else {
          slideElement.classList.remove('opacity-100');
          slideElement.classList.add('opacity-0');
        }
      });
    }

    nextSlide() {
      this.currentSlide = (this.currentSlide + 1) % this.totalSlides;
      this.showSlide(this.currentSlide);
    }

    startAutoRotation() {
      this.pauseAutoRotation();
      this.intervalId = window.setInterval(() => {
        this.nextSlide();
      }, 4000);
    }

    pauseAutoRotation() {
      if (this.intervalId) {
        clearInterval(this.intervalId);
        this.intervalId = null;
      }
    }
  }

  // Initialize carousel when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new PurposeCarousel();
  });
</script>

<style>
  .purpose-section {
    min-height: 100vh;
  }

  .carousel-slide {
    transition: opacity 500ms ease-in-out;
  }

  .title-shadow {
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4), 0px 0px 1px rgba(0, 0, 0, 0.3);
  }

  .text-shadow {
    text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.3), 0px 0px 1px rgba(0, 0, 0, 0.2);
  }

  @media (max-width: 1024px) {
    .purpose-section {
      min-height: auto;
      padding: 4rem 0;
    }
  }
</style>
